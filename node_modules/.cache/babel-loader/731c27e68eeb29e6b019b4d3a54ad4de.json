{"ast":null,"code":"import { axiosWithAuth } from '../component/axiosWithAuth';\nexport const FETCHING_USERS_START = \"FETCHING_USERS_START\";\nexport const FETCHING_USERS_SUCCESS = \"FETCHING_USERS_SUCCESS\";\nexport const FETCHING_USERS_FAILURE = \"FETCHING_USERS_FAILURE\";\nexport const getUser = () => dispatch => {\n  dispatch({\n    type: FETCHING_USERS_START\n  });\n  axiosWithAuth().get('/user').then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FETCHING_USERS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCHING_USERS_FAILURE,\n      payload: err.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/DJ/Documents/Git/friend-finder/src/actions/index.js"],"names":["axiosWithAuth","FETCHING_USERS_START","FETCHING_USERS_SUCCESS","FETCHING_USERS_FAILURE","getUser","dispatch","type","get","then","res","console","log","data","payload","catch","err"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,OAAO,GAAG,MAAMC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAD,EAAAA,aAAa,GACVO,GADH,CACO,OADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,sBAAR;AAAgCW,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAA7C,KAAD,CAAR;AACD,GALH,EAMGE,KANH,CAMSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,sBAAR;AAAgCU,MAAAA,OAAO,EAAEE,GAAG,CAACH;AAA7C,KAAD,CAAR;AACD,GARH;AASD,CAXM","sourcesContent":["import { axiosWithAuth } from '../component/axiosWithAuth';\n\nexport const FETCHING_USERS_START = \"FETCHING_USERS_START\"\nexport const FETCHING_USERS_SUCCESS = \"FETCHING_USERS_SUCCESS\"\nexport const FETCHING_USERS_FAILURE = \"FETCHING_USERS_FAILURE\"\n\nexport const getUser = () => dispatch => {\n  dispatch({ type: FETCHING_USERS_START });\n  axiosWithAuth()\n    .get('/user')\n    .then(res => {\n      console.log(res.data)\n      dispatch({ type: FETCHING_USERS_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: FETCHING_USERS_FAILURE, payload: err.data });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}